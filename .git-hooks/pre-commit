#!/bin/bash

# Allowed branch prefixes and their descriptions
declare -A BRANCH_PREFIXES
BRANCH_PREFIXES=(
  [feature]="New feature in development"
  [fix]="Bug fix or patch"
  [chore]="Routine task or maintenance"
  [docs]="Documentation changes"
  [test]="Work related to testing"
  [refactor]="Code restructuring without changing behavior"
  [poc]="Proof of concept or experimental work"
)

# Build regex pattern dynamically from allowed prefixes
PREFIXES_REGEX=$(IFS="|"; echo "${!BRANCH_PREFIXES[*]}")
BRANCH_REGEX="^(${PREFIXES_REGEX})\/[a-z0-9-]+$"

# Get the current branch name
BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)

if ! echo "$BRANCH_NAME" | grep -Eq "$BRANCH_REGEX"; then
  echo "‚ùå Error: The branch name '$BRANCH_NAME' does not follow the naming convention."
  echo
  echo "üîπ Expected format: <prefix>/branch-name"
  echo "üîπ Examples of valid branch names:"
  echo "   - feature/user-authentication"
  echo "   - fix/navbar-alignment"
  echo "   - docs/project-guidelines"
  echo
  echo "üìå Allowed branch prefixes:"
  for key in "${!BRANCH_PREFIXES[@]}"; do
    printf "  - %-10s ‚Üí %s\n" "$key" "${BRANCH_PREFIXES[$key]}"
  done
  exit 1
fi

echo "‚úÖ Branch name is valid!"
exit 0
